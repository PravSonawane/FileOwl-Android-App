package com.merryapps.fileowl.model.db;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import com.merryapps.framework.EntityState;
import com.merryapps.framework.EntityStateConverter;

import com.merryapps.fileowl.model.db.FrequentFileEntity;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "FREQUENT_FILE".
*/
public class FrequentFileEntityDao extends AbstractDao<FrequentFileEntity, Long> {

    public static final String TABLENAME = "FREQUENT_FILE";

    /**
     * Properties of entity FrequentFileEntity.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property FileType = new Property(1, String.class, "fileType", false, "FILE_TYPE");
        public final static Property FileFrequency = new Property(2, long.class, "fileFrequency", false, "FILE_FREQUENCY");
        public final static Property EntityState = new Property(3, String.class, "entityState", false, "ENTITY_STATE");
    };

    private final EntityStateConverter entityStateConverter = new EntityStateConverter();

    public FrequentFileEntityDao(DaoConfig config) {
        super(config);
    }
    
    public FrequentFileEntityDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"FREQUENT_FILE\" (" + //
                "\"_id\" INTEGER PRIMARY KEY ," + // 0: id
                "\"FILE_TYPE\" TEXT NOT NULL UNIQUE ," + // 1: fileType
                "\"FILE_FREQUENCY\" INTEGER NOT NULL ," + // 2: fileFrequency
                "\"ENTITY_STATE\" TEXT NOT NULL );"); // 3: entityState
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"FREQUENT_FILE\"";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, FrequentFileEntity entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
        stmt.bindString(2, entity.getFileType());
        stmt.bindLong(3, entity.getFileFrequency());
        stmt.bindString(4, entityStateConverter.convertToDatabaseValue(entity.getEntityState()));
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public FrequentFileEntity readEntity(Cursor cursor, int offset) {
        FrequentFileEntity entity = new FrequentFileEntity( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.getString(offset + 1), // fileType
            cursor.getLong(offset + 2), // fileFrequency
            entityStateConverter.convertToEntityProperty(cursor.getString(offset + 3)) // entityState
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, FrequentFileEntity entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setFileType(cursor.getString(offset + 1));
        entity.setFileFrequency(cursor.getLong(offset + 2));
        entity.setEntityState(entityStateConverter.convertToEntityProperty(cursor.getString(offset + 3)));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(FrequentFileEntity entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(FrequentFileEntity entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
